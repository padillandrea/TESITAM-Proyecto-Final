//La base de datos a usar se llamará "Tesitamitas".
    public AdminSQLiteOpenHelper(Context context) {
        super(context,"Tesitam", null, 1);
    }

    //Este método crea las tablas de la base de datos y les inserta los valores.
    public void onCreate(SQLiteDatabase db) {
        //Se crea la tabla "Carreras". En esta tabla se guardan las carreras del ITAM.
        db.execSQL("create table if not exists Carreras" +
                "(idCarr integer primary key not null," +
                "carr text not null);");

        //Se crea la tabla "Sustentante", la cuál tendrá la clave única y la contraseña con la que
        // el usuario podrá iniciar sesión en la app. Tambuén guarda el nombre del usuario.
        db.execSQL("create table if not exists Sustentante " +
                "(CU integer not null primary key, " +
                "Nombre text, " +
                "passw text not null);");

        //Se crea la tabla "CarrUsu". Aquí se guardarán las carreras que cursa cada usuario.
        db.execSQL("create table CarrUsu" +
                "(folioC integer not null primary key," +
                "cu integer references Sustentante(cu)," +
                "idCarr integer references Carreras(idCarr));");

        //Se crea la tabla "Datos", en la cual se guardarán los datos generales del usuario.
        db.execSQL("create table if not exists Datos" +
                "(folio integer not null primary key autoincrement," +
                "cp integer not null," +
                "colonia text not null," +
                "calle text not null," +
                "num integer not null," +
                "correo text not null," +
                "tel text not null," +
                "cu integer not null REFERENCES Sustentante (cu));");

        //Se crea la tabla "Titulación", que servirá para saber el estátus del título y cédula del
        //sustentante, así como la fecha correspondiente a su ceremonia de entrega de documentos.
        db.execSQL("create table if not exists Titulacion " +
                "(num integer not null primary key autoincrement," +
                "titulo integer," +
                "sTit text, " +
                "cedula integer, " +
                "sCed text, " +
                "ceremonia text," +
                "folioC integer not null references CarrUsu(folioC));");

        //Se crea la tabla "TrabajoT", que guarda el tipo de trabajo con el que el alumno se
        // titulará Tesis, Tesina, Ensayo o Caso), así como su asesor, el costo de titularse, y la
        // fecha límite que tienen.
        db.execSQL("create table if not exists TrabajoT " +
                "(NumT integer primary key autoincrement," +
                "Tipo text," +
                "costo integer," +
                "asesor text," +
                "folioC integer not null references CarrUsu(folioC));");

        //Se crea la tabla "Examen". Se guardarán los datos dela fecha y el en que se llevará a cabo, sus
        //sinodales (Presidente, Vicepresidente y Secretario) el resultado del mismo (reprobado o
        //aprobado y si acaso obtuvo alguna mención).
        db.execSQL("create table Examen" +
                "(Folio integer not null primary key autoincrement," +
                "Salon text," +
                "sPres text," +
                "sVice text," +
                "sSecr text," +
                "Resultado int," +
                "mencion text, " +
                "Fecha text," +
                "folioC integer not null references CarrUsu(folioC));");

        //Se insertan los valores predeterminados de cada tabla para cada usuario.
        //Tabla "Carreras"
        db.execSQL("insert into Carreras values(0,'Contaduría Pública');");
        db.execSQL("insert into Carreras values(1,'Contaduría Pública y Estrategia Financiera');");
        db.execSQL("insert into Carreras values(2,'Ingeniería en Computación');");
        db.execSQL("insert into Carreras values(3,'Ingeniería Industrial');");
        db.execSQL("insert into Carreras values(4,'Ingeniería Mecatrónica');");
        db.execSQL("insert into Carreras values(5,'Ingeniería en Negocios');");
        db.execSQL("insert into Carreras values(6,'Ingeniería en Telecomunicaciones');");
        db.execSQL("insert into Carreras values(7,'Ingeniería en Telemática');");
        db.execSQL("insert into Carreras values(8,'Licenciatura en Administración');");
        db.execSQL("insert into Carreras values(9,'Licenciatura en Actuaría');");
        db.execSQL("insert into Carreras values(10,'Licenciatura en Ciencia Política');");
        db.execSQL("insert into Carreras values(11,'Licenciatura en Derecho');");
        db.execSQL("insert into Carreras values(12,'Licenciatura en Dirección Financiera');");
        db.execSQL("insert into Carreras values(13,'Licenciatura en Economía');");
        db.execSQL("insert into Carreras values(14,'Licenciatura en Matemáticas Aplicadas');");
        db.execSQL("insert into Carreras values(15,'Licenciatura en Relaciones Internacionales');");
        //Tabla "Sustentante"
        db.execSQL("insert into Sustentante values(166605,'Andrea',passw);");
        db.execSQL("insert into Sustentante values(164941,'Daniela',passw);");
        db.execSQL("insert into Sustentante values(166617,'Diana',passw);");
        db.execSQL("insert into Sustentante values(167028,'Ivana',passw);");
        db.execSQL("insert into Sustentante values(164694,'Lorena',passw);");
        db.execSQL("insert into Sustentante values(154772,'Juan',passw);");
        //Tabla "CarrUsu"
        db.execSQL("insert into CarrUsu values(0,166605,2);");
        db.execSQL("insert into CarrUsu values(1,164941,3);");
        db.execSQL("insert into CarrUsu values(2,166617,5);");
        db.execSQL("insert into CarrUsu values(3,166617,13);");
        db.execSQL("insert into CarrUsu values(4,167028,2);");
        db.execSQL("insert into CarrUsu values(5,167028,12);");
        db.execSQL("insert into CarrUsu values(6,164694,6);");
        db.execSQL("insert into CarrUsu values(7,154772,12);");
        //Tabla "Datos"
        db.execSQL("insert into Datos values(0,01080,'Progreso Tizapán','Morelos',21,'padillandrea.ap@gmail.com','2223803030',166605);");
        db.execSQL("insert into Datos values(0,01080,'Progreso Tizapán','Morelos',21,'juanpadillarodz@hotmail.com','8110292521',154772);");
        //Tabla "Titulación"
        db.execSQL("insert into Titulacion values(0,1,'Entregado',1,'Entregado','14 de abril del 2018',0);");
        db.execSQL("insert into Titulacion values(1,0,'No se ha presentado el examen',0,'No se ha presentado el examen','Pendiente',1);");
        db.execSQL("insert into Titulacion values(2,1,'En proceso',1,'En proceso','01 de septiembre del 2018',2);");
        db.execSQL("insert into Titulacion values(3,1,'En proceso',1,'En proceso','01 de septiembre del 2018',3);");
        db.execSQL("insert into Titulacion values(4,0,'No se ha presentado el examen',0,'No se ha presentado el examen','Pendiente',4);");
        db.execSQL("insert into Titulacion values(5,0,'No se ha presentado el examen',0,'No se ha presentado el examen','Pendiente',5);");
        db.execSQL("insert into Titulacion values(6,0,'No se ha presentado el examen',0,'No se ha presentado el examen','Pendiente',6);");
        db.execSQL("insert into Titulacion values(7,1,'Entregado',1,'Entregado','01 de septiembre del 2018',7);");
        //Tabla "TrabajoT"
        db.execSQL("insert into TrabajoT values(0,'Tesis',19800,'Dra. Ana Lidia Franzoni Velázquez',0);");
        db.execSQL("insert into TrabajoT values(1,'CFA',16100,'Sin asesor',7);");
        //Tabla "Examen"
        db.execSQL("insert into Examen values(0,'Sala de conferencias','Dr. Fernando Esponda Darlington','Dr. Andrés Gómez de Silva Garza','Dra. Ana Lidia Franzoni Velázquez',1,'Honorífica','18 de mayo del 2017',0);");
        db.execSQL("insert into Examen values(1,'SA1','Dr. Pablo Galván','Dr. Janko Martínez','M.P.P. Jorge Márquez',1,'Honorífica','18 de diciembre del 2017',7);");
    }

    //Elimina las tablas para volverlas a crear y les inserta los valores predeterminados.
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        //Elimina las tablas
        db.execSQL("drop table if exists Carreras;");
        db.execSQL("drop table if exists Sustentante;");
        db.execSQL("drop table if exists CarrUsu;");
        db.execSQL("drop table if exists Datos;");
        db.execSQL("drop table if exists Titulacion;");
        db.execSQL("drop table if exists TrabajoT;");
        db.execSQL("drop table if exists Examen;");

        //Llama al método "onCreate" que crea las tablas y les inserta los valores predeterminados.
        onCreate(db);
    }